'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.6400
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.6400.
'
Namespace OMServices
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WS_OM_OMEHRServicesSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WS_OM_OMEHRServices
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetEmployeeProfile_SummaryReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Get_LogK2_ChangeApprover_Input_DataSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllemployeeunderApprover_Input_DataSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmployeeProfileByPIN_MultiPositionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private List_EmpProfile_Time_ChangeApprover_Input_DataSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetChangeApproverK2_SummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private List_LogK2_ChangeApprover_DetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrgInfobyOrgCode_IN_DataSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmployeeProfileByPIN_Input_DataSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmployeeProfileByPIN_Input_DataSetByPowerSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private List_Log_OM_TransFormOperationCompleted As System.Threading.SendOrPostCallback
        
        Private listOrganizeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private listOrganizeLowerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCostCenterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListOrganizeLowerByListOrgOperationCompleted As System.Threading.SendOrPostCallback
        
        Private listOrganizeUpperOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CHECKMANAGEROperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetManagerByOrgCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrgPersInfoByBossPostIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrgPersInfoByOrgHRMPINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrgPersInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmployee_By_CompanyCode_Name_PINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllOrgInfobyEmpIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrgInfobyOrgCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListPinsbyOrgCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStaffCountByPositionIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllPGOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApproverOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStaffCountbyOrgCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrganizationNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCompanyByOrgCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeIDByEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetListEmployeePositionAndOrganizationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllPinsUnderOrgCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllPinsUnderOrgCodeByPrefixPinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllPinsUnderOrgCodeByPrefixEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllPinsUnderOrgCodeByPrefixThaiNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllPinsUnderOrgCodeByPrefixThaiSurNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllPositionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchOrgInfoByOrgCodeOrOrgDescOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchOrgInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListTemporaryPinByNewPinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllCompanyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrganizationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmployeeProfileByPINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetApproverProfileByPINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixEngNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixEngLastNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixThaiNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixThaiLastNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixPinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixOrgcodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixOrgnameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByPrefixOrgdescOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllApproverOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetListEmployeeUnderApproverOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJobKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchEmpDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Search_EmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private List_ActingApproverOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListOrganizeByOrganizeLevelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchEmployeeOrgOperationCompleted As System.Threading.SendOrPostCallback
        
        Private List_LineApproverPositionAVPUPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListOrganizeLevelByCompanyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileByUsernameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListLineOrganizeByOrganizeCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListOrgDescByPrefixOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListGradeDescByPrefixOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmpForFingerScanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmpForFingerScanResignedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListEmpResignedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllPinsUnderOrgCodeReNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckEmpResignedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEepForOM1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private getListMovementBYDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProvidentFundBYPinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileForStaffPackagesBYPINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeProfileForStaffPackagesBYUserNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetListALLMovementBYDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListAllEmployeeProfileForITAMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.OMLinqWS.My.MySettings.Default.OMLinqWS_OMServices_WS_OM_OMEHRServices
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetEmployeeProfile_SummaryReportCompleted As GetEmployeeProfile_SummaryReportCompletedEventHandler
        
        '''<remarks/>
        Public Event Get_LogK2_ChangeApprover_Input_DataSetCompleted As Get_LogK2_ChangeApprover_Input_DataSetCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllemployeeunderApprover_Input_DataSetCompleted As ListAllemployeeunderApprover_Input_DataSetCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmployeeProfileByPIN_MultiPositionCompleted As ListEmployeeProfileByPIN_MultiPositionCompletedEventHandler
        
        '''<remarks/>
        Public Event List_EmpProfile_Time_ChangeApprover_Input_DataSetCompleted As List_EmpProfile_Time_ChangeApprover_Input_DataSetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetChangeApproverK2_SummaryCompleted As GetChangeApproverK2_SummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event List_LogK2_ChangeApprover_DetailCompleted As List_LogK2_ChangeApprover_DetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrgInfobyOrgCode_IN_DataSetCompleted As GetOrgInfobyOrgCode_IN_DataSetCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmployeeProfileByPIN_Input_DataSetCompleted As ListEmployeeProfileByPIN_Input_DataSetCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompleted As ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event List_Log_OM_TransFormCompleted As List_Log_OM_TransFormCompletedEventHandler
        
        '''<remarks/>
        Public Event listOrganizeCompleted As listOrganizeCompletedEventHandler
        
        '''<remarks/>
        Public Event listOrganizeLowerCompleted As listOrganizeLowerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCostCenterCompleted As GetCostCenterCompletedEventHandler
        
        '''<remarks/>
        Public Event ListOrganizeLowerByListOrgCompleted As ListOrganizeLowerByListOrgCompletedEventHandler
        
        '''<remarks/>
        Public Event listOrganizeUpperCompleted As listOrganizeUpperCompletedEventHandler
        
        '''<remarks/>
        Public Event CHECKMANAGERCompleted As CHECKMANAGERCompletedEventHandler
        
        '''<remarks/>
        Public Event GetManagerByOrgCodeCompleted As GetManagerByOrgCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrgPersInfoByBossPostIDCompleted As GetOrgPersInfoByBossPostIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrgPersInfoByOrgHRMPINCompleted As GetOrgPersInfoByOrgHRMPINCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrgPersInfoCompleted As GetOrgPersInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmployee_By_CompanyCode_Name_PINCompleted As ListEmployee_By_CompanyCode_Name_PINCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllOrgInfobyEmpIDCompleted As GetAllOrgInfobyEmpIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrgInfobyOrgCodeCompleted As GetOrgInfobyOrgCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event ListPinsbyOrgCodeCompleted As ListPinsbyOrgCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStaffCountByPositionIDCompleted As GetStaffCountByPositionIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllPGCompleted As GetAllPGCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApproverCompleted As GetApproverCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStaffCountbyOrgCodeCompleted As GetStaffCountbyOrgCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrganizationNameCompleted As GetOrganizationNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCompanyByOrgCodeCompleted As GetCompanyByOrgCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeIDByEmailCompleted As GetEmployeeIDByEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetListEmployeePositionAndOrganizationCompleted As GetListEmployeePositionAndOrganizationCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllPinsUnderOrgCodeCompleted As ListAllPinsUnderOrgCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllPinsUnderOrgCodeByPrefixPinCompleted As ListAllPinsUnderOrgCodeByPrefixPinCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllPinsUnderOrgCodeByPrefixEmailCompleted As ListAllPinsUnderOrgCodeByPrefixEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllPinsUnderOrgCodeByPrefixThaiNameCompleted As ListAllPinsUnderOrgCodeByPrefixThaiNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompleted As ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllPositionCompleted As GetAllPositionCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchOrgInfoByOrgCodeOrOrgDescCompleted As SearchOrgInfoByOrgCodeOrOrgDescCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchOrgInfoCompleted As SearchOrgInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event ListTemporaryPinByNewPinCompleted As ListTemporaryPinByNewPinCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllCompanyCompleted As GetAllCompanyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileCompleted As GetEmployeeProfileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrganizationCompleted As GetOrganizationCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmployeeProfileByPINCompleted As ListEmployeeProfileByPINCompletedEventHandler
        
        '''<remarks/>
        Public Event GetApproverProfileByPINCompleted As GetApproverProfileByPINCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixEngNameCompleted As GetEmployeeProfileByPrefixEngNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixEngLastNameCompleted As GetEmployeeProfileByPrefixEngLastNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixThaiNameCompleted As GetEmployeeProfileByPrefixThaiNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixThaiLastNameCompleted As GetEmployeeProfileByPrefixThaiLastNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixEmailCompleted As GetEmployeeProfileByPrefixEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixPinCompleted As GetEmployeeProfileByPrefixPinCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixOrgcodeCompleted As GetEmployeeProfileByPrefixOrgcodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixOrgnameCompleted As GetEmployeeProfileByPrefixOrgnameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByPrefixOrgdescCompleted As GetEmployeeProfileByPrefixOrgdescCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByEmailCompleted As GetEmployeeProfileByEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllApproverCompleted As ListAllApproverCompletedEventHandler
        
        '''<remarks/>
        Public Event GetListEmployeeUnderApproverCompleted As GetListEmployeeUnderApproverCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJobKeyCompleted As GetJobKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchEmpDetailCompleted As SearchEmpDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event Search_EmployeeCompleted As Search_EmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event List_ActingApproverCompleted As List_ActingApproverCompletedEventHandler
        
        '''<remarks/>
        Public Event ListOrganizeByOrganizeLevelCompleted As ListOrganizeByOrganizeLevelCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchEmployeeOrgCompleted As SearchEmployeeOrgCompletedEventHandler
        
        '''<remarks/>
        Public Event List_LineApproverPositionAVPUPCompleted As List_LineApproverPositionAVPUPCompletedEventHandler
        
        '''<remarks/>
        Public Event ListOrganizeLevelByCompanyCompleted As ListOrganizeLevelByCompanyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileByUsernameCompleted As GetEmployeeProfileByUsernameCompletedEventHandler
        
        '''<remarks/>
        Public Event ListLineOrganizeByOrganizeCodeCompleted As ListLineOrganizeByOrganizeCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event ListOrgDescByPrefixCompleted As ListOrgDescByPrefixCompletedEventHandler
        
        '''<remarks/>
        Public Event ListGradeDescByPrefixCompleted As ListGradeDescByPrefixCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmpForFingerScanCompleted As ListEmpForFingerScanCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmpForFingerScanResignedCompleted As ListEmpForFingerScanResignedCompletedEventHandler
        
        '''<remarks/>
        Public Event ListEmpResignedCompleted As ListEmpResignedCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllPinsUnderOrgCodeReNewCompleted As ListAllPinsUnderOrgCodeReNewCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckEmpResignedCompleted As CheckEmpResignedCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllEmployeeCompleted As getAllEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event getEepForOM1Completed As getEepForOM1CompletedEventHandler
        
        '''<remarks/>
        Public Event getListMovementBYDateCompleted As getListMovementBYDateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProvidentFundBYPinCompleted As GetProvidentFundBYPinCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileForStaffPackagesBYPINCompleted As GetEmployeeProfileForStaffPackagesBYPINCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeProfileForStaffPackagesBYUserNameCompleted As GetEmployeeProfileForStaffPackagesBYUserNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetListALLMovementBYDateCompleted As GetListALLMovementBYDateCompletedEventHandler
        
        '''<remarks/>
        Public Event ListAllEmployeeProfileForITAMCompleted As ListAllEmployeeProfileForITAMCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfile_SummaryReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfile_SummaryReport(ByVal pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfile_SummaryReport", New Object() {pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfile_SummaryReportAsync(ByVal pin As String)
            Me.GetEmployeeProfile_SummaryReportAsync(pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfile_SummaryReportAsync(ByVal pin As String, ByVal userState As Object)
            If (Me.GetEmployeeProfile_SummaryReportOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfile_SummaryReportOperationCompleted = AddressOf Me.OnGetEmployeeProfile_SummaryReportOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfile_SummaryReport", New Object() {pin}, Me.GetEmployeeProfile_SummaryReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfile_SummaryReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfile_SummaryReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfile_SummaryReportCompleted(Me, New GetEmployeeProfile_SummaryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_LogK2_ChangeApprover_Input_DataSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_LogK2_ChangeApprover_Input_DataSet(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Get_LogK2_ChangeApprover_Input_DataSet", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Get_LogK2_ChangeApprover_Input_DataSetAsync(ByVal ds As System.Data.DataSet)
            Me.Get_LogK2_ChangeApprover_Input_DataSetAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Get_LogK2_ChangeApprover_Input_DataSetAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.Get_LogK2_ChangeApprover_Input_DataSetOperationCompleted Is Nothing) Then
                Me.Get_LogK2_ChangeApprover_Input_DataSetOperationCompleted = AddressOf Me.OnGet_LogK2_ChangeApprover_Input_DataSetOperationCompleted
            End If
            Me.InvokeAsync("Get_LogK2_ChangeApprover_Input_DataSet", New Object() {ds}, Me.Get_LogK2_ChangeApprover_Input_DataSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnGet_LogK2_ChangeApprover_Input_DataSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.Get_LogK2_ChangeApprover_Input_DataSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Get_LogK2_ChangeApprover_Input_DataSetCompleted(Me, New Get_LogK2_ChangeApprover_Input_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllemployeeunderApprover_Input_DataSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllemployeeunderApprover_Input_DataSet(ByVal pinManager As String, ByVal positionManager As String, ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllemployeeunderApprover_Input_DataSet", New Object() {pinManager, positionManager, ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllemployeeunderApprover_Input_DataSetAsync(ByVal pinManager As String, ByVal positionManager As String, ByVal ds As System.Data.DataSet)
            Me.ListAllemployeeunderApprover_Input_DataSetAsync(pinManager, positionManager, ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllemployeeunderApprover_Input_DataSetAsync(ByVal pinManager As String, ByVal positionManager As String, ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.ListAllemployeeunderApprover_Input_DataSetOperationCompleted Is Nothing) Then
                Me.ListAllemployeeunderApprover_Input_DataSetOperationCompleted = AddressOf Me.OnListAllemployeeunderApprover_Input_DataSetOperationCompleted
            End If
            Me.InvokeAsync("ListAllemployeeunderApprover_Input_DataSet", New Object() {pinManager, positionManager, ds}, Me.ListAllemployeeunderApprover_Input_DataSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllemployeeunderApprover_Input_DataSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllemployeeunderApprover_Input_DataSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllemployeeunderApprover_Input_DataSetCompleted(Me, New ListAllemployeeunderApprover_Input_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployeeProfileByPIN_MultiPosition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmployeeProfileByPIN_MultiPosition(ByVal pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmployeeProfileByPIN_MultiPosition", New Object() {pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPIN_MultiPositionAsync(ByVal pin As String)
            Me.ListEmployeeProfileByPIN_MultiPositionAsync(pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPIN_MultiPositionAsync(ByVal pin As String, ByVal userState As Object)
            If (Me.ListEmployeeProfileByPIN_MultiPositionOperationCompleted Is Nothing) Then
                Me.ListEmployeeProfileByPIN_MultiPositionOperationCompleted = AddressOf Me.OnListEmployeeProfileByPIN_MultiPositionOperationCompleted
            End If
            Me.InvokeAsync("ListEmployeeProfileByPIN_MultiPosition", New Object() {pin}, Me.ListEmployeeProfileByPIN_MultiPositionOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmployeeProfileByPIN_MultiPositionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmployeeProfileByPIN_MultiPositionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmployeeProfileByPIN_MultiPositionCompleted(Me, New ListEmployeeProfileByPIN_MultiPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/List_EmpProfile_Time_ChangeApprover_Input_DataSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function List_EmpProfile_Time_ChangeApprover_Input_DataSet(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("List_EmpProfile_Time_ChangeApprover_Input_DataSet", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub List_EmpProfile_Time_ChangeApprover_Input_DataSetAsync(ByVal ds As System.Data.DataSet)
            Me.List_EmpProfile_Time_ChangeApprover_Input_DataSetAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub List_EmpProfile_Time_ChangeApprover_Input_DataSetAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.List_EmpProfile_Time_ChangeApprover_Input_DataSetOperationCompleted Is Nothing) Then
                Me.List_EmpProfile_Time_ChangeApprover_Input_DataSetOperationCompleted = AddressOf Me.OnList_EmpProfile_Time_ChangeApprover_Input_DataSetOperationCompleted
            End If
            Me.InvokeAsync("List_EmpProfile_Time_ChangeApprover_Input_DataSet", New Object() {ds}, Me.List_EmpProfile_Time_ChangeApprover_Input_DataSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnList_EmpProfile_Time_ChangeApprover_Input_DataSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.List_EmpProfile_Time_ChangeApprover_Input_DataSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent List_EmpProfile_Time_ChangeApprover_Input_DataSetCompleted(Me, New List_EmpProfile_Time_ChangeApprover_Input_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChangeApproverK2_Summary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetChangeApproverK2_Summary(ByVal StartDate As String, ByVal End_Date As String, ByVal Status As String, ByVal type As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetChangeApproverK2_Summary", New Object() {StartDate, End_Date, Status, type})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetChangeApproverK2_SummaryAsync(ByVal StartDate As String, ByVal End_Date As String, ByVal Status As String, ByVal type As String)
            Me.GetChangeApproverK2_SummaryAsync(StartDate, End_Date, Status, type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetChangeApproverK2_SummaryAsync(ByVal StartDate As String, ByVal End_Date As String, ByVal Status As String, ByVal type As String, ByVal userState As Object)
            If (Me.GetChangeApproverK2_SummaryOperationCompleted Is Nothing) Then
                Me.GetChangeApproverK2_SummaryOperationCompleted = AddressOf Me.OnGetChangeApproverK2_SummaryOperationCompleted
            End If
            Me.InvokeAsync("GetChangeApproverK2_Summary", New Object() {StartDate, End_Date, Status, type}, Me.GetChangeApproverK2_SummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetChangeApproverK2_SummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetChangeApproverK2_SummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetChangeApproverK2_SummaryCompleted(Me, New GetChangeApproverK2_SummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/List_LogK2_ChangeApprover_Detail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function List_LogK2_ChangeApprover_Detail(ByVal Log_Date As String, ByVal type As String, ByVal status As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("List_LogK2_ChangeApprover_Detail", New Object() {Log_Date, type, status})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub List_LogK2_ChangeApprover_DetailAsync(ByVal Log_Date As String, ByVal type As String, ByVal status As String)
            Me.List_LogK2_ChangeApprover_DetailAsync(Log_Date, type, status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub List_LogK2_ChangeApprover_DetailAsync(ByVal Log_Date As String, ByVal type As String, ByVal status As String, ByVal userState As Object)
            If (Me.List_LogK2_ChangeApprover_DetailOperationCompleted Is Nothing) Then
                Me.List_LogK2_ChangeApprover_DetailOperationCompleted = AddressOf Me.OnList_LogK2_ChangeApprover_DetailOperationCompleted
            End If
            Me.InvokeAsync("List_LogK2_ChangeApprover_Detail", New Object() {Log_Date, type, status}, Me.List_LogK2_ChangeApprover_DetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnList_LogK2_ChangeApprover_DetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.List_LogK2_ChangeApprover_DetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent List_LogK2_ChangeApprover_DetailCompleted(Me, New List_LogK2_ChangeApprover_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrgInfobyOrgCode_IN_DataSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrgInfobyOrgCode_IN_DataSet(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOrgInfobyOrgCode_IN_DataSet", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrgInfobyOrgCode_IN_DataSetAsync(ByVal ds As System.Data.DataSet)
            Me.GetOrgInfobyOrgCode_IN_DataSetAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrgInfobyOrgCode_IN_DataSetAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetOrgInfobyOrgCode_IN_DataSetOperationCompleted Is Nothing) Then
                Me.GetOrgInfobyOrgCode_IN_DataSetOperationCompleted = AddressOf Me.OnGetOrgInfobyOrgCode_IN_DataSetOperationCompleted
            End If
            Me.InvokeAsync("GetOrgInfobyOrgCode_IN_DataSet", New Object() {ds}, Me.GetOrgInfobyOrgCode_IN_DataSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrgInfobyOrgCode_IN_DataSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrgInfobyOrgCode_IN_DataSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrgInfobyOrgCode_IN_DataSetCompleted(Me, New GetOrgInfobyOrgCode_IN_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployeeProfileByPIN_Input_DataSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmployeeProfileByPIN_Input_DataSet(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmployeeProfileByPIN_Input_DataSet", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPIN_Input_DataSetAsync(ByVal ds As System.Data.DataSet)
            Me.ListEmployeeProfileByPIN_Input_DataSetAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPIN_Input_DataSetAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.ListEmployeeProfileByPIN_Input_DataSetOperationCompleted Is Nothing) Then
                Me.ListEmployeeProfileByPIN_Input_DataSetOperationCompleted = AddressOf Me.OnListEmployeeProfileByPIN_Input_DataSetOperationCompleted
            End If
            Me.InvokeAsync("ListEmployeeProfileByPIN_Input_DataSet", New Object() {ds}, Me.ListEmployeeProfileByPIN_Input_DataSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmployeeProfileByPIN_Input_DataSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmployeeProfileByPIN_Input_DataSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmployeeProfileByPIN_Input_DataSetCompleted(Me, New ListEmployeeProfileByPIN_Input_DataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployeeProfileByPIN_Input_DataSetByPowerSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmployeeProfileByPIN_Input_DataSetByPowerSearch(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmployeeProfileByPIN_Input_DataSetByPowerSearch", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPIN_Input_DataSetByPowerSearchAsync(ByVal ds As System.Data.DataSet)
            Me.ListEmployeeProfileByPIN_Input_DataSetByPowerSearchAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPIN_Input_DataSetByPowerSearchAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.ListEmployeeProfileByPIN_Input_DataSetByPowerSearchOperationCompleted Is Nothing) Then
                Me.ListEmployeeProfileByPIN_Input_DataSetByPowerSearchOperationCompleted = AddressOf Me.OnListEmployeeProfileByPIN_Input_DataSetByPowerSearchOperationCompleted
            End If
            Me.InvokeAsync("ListEmployeeProfileByPIN_Input_DataSetByPowerSearch", New Object() {ds}, Me.ListEmployeeProfileByPIN_Input_DataSetByPowerSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmployeeProfileByPIN_Input_DataSetByPowerSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompleted(Me, New ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/List_Log_OM_TransForm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function List_Log_OM_TransForm(ByVal ProcessID As String, ByVal Status As String, ByVal StartDate As String, ByVal EndDate As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("List_Log_OM_TransForm", New Object() {ProcessID, Status, StartDate, EndDate})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub List_Log_OM_TransFormAsync(ByVal ProcessID As String, ByVal Status As String, ByVal StartDate As String, ByVal EndDate As String)
            Me.List_Log_OM_TransFormAsync(ProcessID, Status, StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub List_Log_OM_TransFormAsync(ByVal ProcessID As String, ByVal Status As String, ByVal StartDate As String, ByVal EndDate As String, ByVal userState As Object)
            If (Me.List_Log_OM_TransFormOperationCompleted Is Nothing) Then
                Me.List_Log_OM_TransFormOperationCompleted = AddressOf Me.OnList_Log_OM_TransFormOperationCompleted
            End If
            Me.InvokeAsync("List_Log_OM_TransForm", New Object() {ProcessID, Status, StartDate, EndDate}, Me.List_Log_OM_TransFormOperationCompleted, userState)
        End Sub
        
        Private Sub OnList_Log_OM_TransFormOperationCompleted(ByVal arg As Object)
            If (Not (Me.List_Log_OM_TransFormCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent List_Log_OM_TransFormCompleted(Me, New List_Log_OM_TransFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listOrganize", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function listOrganize(ByVal LowerOrgCode As String, ByVal HigherOrgCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("listOrganize", New Object() {LowerOrgCode, HigherOrgCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub listOrganizeAsync(ByVal LowerOrgCode As String, ByVal HigherOrgCode As String)
            Me.listOrganizeAsync(LowerOrgCode, HigherOrgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub listOrganizeAsync(ByVal LowerOrgCode As String, ByVal HigherOrgCode As String, ByVal userState As Object)
            If (Me.listOrganizeOperationCompleted Is Nothing) Then
                Me.listOrganizeOperationCompleted = AddressOf Me.OnlistOrganizeOperationCompleted
            End If
            Me.InvokeAsync("listOrganize", New Object() {LowerOrgCode, HigherOrgCode}, Me.listOrganizeOperationCompleted, userState)
        End Sub
        
        Private Sub OnlistOrganizeOperationCompleted(ByVal arg As Object)
            If (Not (Me.listOrganizeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent listOrganizeCompleted(Me, New listOrganizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listOrganizeLower", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function listOrganizeLower(ByVal OrgCode As String, ByVal Level As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("listOrganizeLower", New Object() {OrgCode, Level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub listOrganizeLowerAsync(ByVal OrgCode As String, ByVal Level As String)
            Me.listOrganizeLowerAsync(OrgCode, Level, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub listOrganizeLowerAsync(ByVal OrgCode As String, ByVal Level As String, ByVal userState As Object)
            If (Me.listOrganizeLowerOperationCompleted Is Nothing) Then
                Me.listOrganizeLowerOperationCompleted = AddressOf Me.OnlistOrganizeLowerOperationCompleted
            End If
            Me.InvokeAsync("listOrganizeLower", New Object() {OrgCode, Level}, Me.listOrganizeLowerOperationCompleted, userState)
        End Sub
        
        Private Sub OnlistOrganizeLowerOperationCompleted(ByVal arg As Object)
            If (Not (Me.listOrganizeLowerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent listOrganizeLowerCompleted(Me, New listOrganizeLowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCostCenter", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCostCenter(ByVal Costcenter As String, ByVal CompanyCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCostCenter", New Object() {Costcenter, CompanyCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCostCenterAsync(ByVal Costcenter As String, ByVal CompanyCode As String)
            Me.GetCostCenterAsync(Costcenter, CompanyCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCostCenterAsync(ByVal Costcenter As String, ByVal CompanyCode As String, ByVal userState As Object)
            If (Me.GetCostCenterOperationCompleted Is Nothing) Then
                Me.GetCostCenterOperationCompleted = AddressOf Me.OnGetCostCenterOperationCompleted
            End If
            Me.InvokeAsync("GetCostCenter", New Object() {Costcenter, CompanyCode}, Me.GetCostCenterOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCostCenterOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCostCenterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCostCenterCompleted(Me, New GetCostCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOrganizeLowerByListOrg", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListOrganizeLowerByListOrg(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListOrganizeLowerByListOrg", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListOrganizeLowerByListOrgAsync(ByVal ds As System.Data.DataSet)
            Me.ListOrganizeLowerByListOrgAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListOrganizeLowerByListOrgAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.ListOrganizeLowerByListOrgOperationCompleted Is Nothing) Then
                Me.ListOrganizeLowerByListOrgOperationCompleted = AddressOf Me.OnListOrganizeLowerByListOrgOperationCompleted
            End If
            Me.InvokeAsync("ListOrganizeLowerByListOrg", New Object() {ds}, Me.ListOrganizeLowerByListOrgOperationCompleted, userState)
        End Sub
        
        Private Sub OnListOrganizeLowerByListOrgOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListOrganizeLowerByListOrgCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListOrganizeLowerByListOrgCompleted(Me, New ListOrganizeLowerByListOrgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listOrganizeUpper", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function listOrganizeUpper(ByVal OrgCode As String, ByVal Level As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("listOrganizeUpper", New Object() {OrgCode, Level})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub listOrganizeUpperAsync(ByVal OrgCode As String, ByVal Level As String)
            Me.listOrganizeUpperAsync(OrgCode, Level, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub listOrganizeUpperAsync(ByVal OrgCode As String, ByVal Level As String, ByVal userState As Object)
            If (Me.listOrganizeUpperOperationCompleted Is Nothing) Then
                Me.listOrganizeUpperOperationCompleted = AddressOf Me.OnlistOrganizeUpperOperationCompleted
            End If
            Me.InvokeAsync("listOrganizeUpper", New Object() {OrgCode, Level}, Me.listOrganizeUpperOperationCompleted, userState)
        End Sub
        
        Private Sub OnlistOrganizeUpperOperationCompleted(ByVal arg As Object)
            If (Not (Me.listOrganizeUpperCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent listOrganizeUpperCompleted(Me, New listOrganizeUpperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CHECKMANAGER", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CHECKMANAGER(ByVal POSITION As String) As Boolean
            Dim results() As Object = Me.Invoke("CHECKMANAGER", New Object() {POSITION})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CHECKMANAGERAsync(ByVal POSITION As String)
            Me.CHECKMANAGERAsync(POSITION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CHECKMANAGERAsync(ByVal POSITION As String, ByVal userState As Object)
            If (Me.CHECKMANAGEROperationCompleted Is Nothing) Then
                Me.CHECKMANAGEROperationCompleted = AddressOf Me.OnCHECKMANAGEROperationCompleted
            End If
            Me.InvokeAsync("CHECKMANAGER", New Object() {POSITION}, Me.CHECKMANAGEROperationCompleted, userState)
        End Sub
        
        Private Sub OnCHECKMANAGEROperationCompleted(ByVal arg As Object)
            If (Not (Me.CHECKMANAGERCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CHECKMANAGERCompleted(Me, New CHECKMANAGERCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetManagerByOrgCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetManagerByOrgCode(ByVal OrgCode As String) As String
            Dim results() As Object = Me.Invoke("GetManagerByOrgCode", New Object() {OrgCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetManagerByOrgCodeAsync(ByVal OrgCode As String)
            Me.GetManagerByOrgCodeAsync(OrgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetManagerByOrgCodeAsync(ByVal OrgCode As String, ByVal userState As Object)
            If (Me.GetManagerByOrgCodeOperationCompleted Is Nothing) Then
                Me.GetManagerByOrgCodeOperationCompleted = AddressOf Me.OnGetManagerByOrgCodeOperationCompleted
            End If
            Me.InvokeAsync("GetManagerByOrgCode", New Object() {OrgCode}, Me.GetManagerByOrgCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetManagerByOrgCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetManagerByOrgCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetManagerByOrgCodeCompleted(Me, New GetManagerByOrgCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrgPersInfoByBossPostID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrgPersInfoByBossPostID(ByVal PIN As String, ByVal BossPosition As String, ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOrgPersInfoByBossPostID", New Object() {PIN, BossPosition, Organization, Name, NickName, Position, Tel, Job})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrgPersInfoByBossPostIDAsync(ByVal PIN As String, ByVal BossPosition As String, ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String)
            Me.GetOrgPersInfoByBossPostIDAsync(PIN, BossPosition, Organization, Name, NickName, Position, Tel, Job, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrgPersInfoByBossPostIDAsync(ByVal PIN As String, ByVal BossPosition As String, ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String, ByVal userState As Object)
            If (Me.GetOrgPersInfoByBossPostIDOperationCompleted Is Nothing) Then
                Me.GetOrgPersInfoByBossPostIDOperationCompleted = AddressOf Me.OnGetOrgPersInfoByBossPostIDOperationCompleted
            End If
            Me.InvokeAsync("GetOrgPersInfoByBossPostID", New Object() {PIN, BossPosition, Organization, Name, NickName, Position, Tel, Job}, Me.GetOrgPersInfoByBossPostIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrgPersInfoByBossPostIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrgPersInfoByBossPostIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrgPersInfoByBossPostIDCompleted(Me, New GetOrgPersInfoByBossPostIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrgPersInfoByOrgHRMPIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrgPersInfoByOrgHRMPIN(ByVal PIN As String, ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOrgPersInfoByOrgHRMPIN", New Object() {PIN, Organization, Name, NickName, Position, Tel, Job})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrgPersInfoByOrgHRMPINAsync(ByVal PIN As String, ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String)
            Me.GetOrgPersInfoByOrgHRMPINAsync(PIN, Organization, Name, NickName, Position, Tel, Job, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrgPersInfoByOrgHRMPINAsync(ByVal PIN As String, ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String, ByVal userState As Object)
            If (Me.GetOrgPersInfoByOrgHRMPINOperationCompleted Is Nothing) Then
                Me.GetOrgPersInfoByOrgHRMPINOperationCompleted = AddressOf Me.OnGetOrgPersInfoByOrgHRMPINOperationCompleted
            End If
            Me.InvokeAsync("GetOrgPersInfoByOrgHRMPIN", New Object() {PIN, Organization, Name, NickName, Position, Tel, Job}, Me.GetOrgPersInfoByOrgHRMPINOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrgPersInfoByOrgHRMPINOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrgPersInfoByOrgHRMPINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrgPersInfoByOrgHRMPINCompleted(Me, New GetOrgPersInfoByOrgHRMPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrgPersInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrgPersInfo(ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOrgPersInfo", New Object() {Organization, Name, NickName, Position, Tel, Job})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrgPersInfoAsync(ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String)
            Me.GetOrgPersInfoAsync(Organization, Name, NickName, Position, Tel, Job, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrgPersInfoAsync(ByVal Organization As String, ByVal Name As String, ByVal NickName As String, ByVal Position As String, ByVal Tel As String, ByVal Job As String, ByVal userState As Object)
            If (Me.GetOrgPersInfoOperationCompleted Is Nothing) Then
                Me.GetOrgPersInfoOperationCompleted = AddressOf Me.OnGetOrgPersInfoOperationCompleted
            End If
            Me.InvokeAsync("GetOrgPersInfo", New Object() {Organization, Name, NickName, Position, Tel, Job}, Me.GetOrgPersInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrgPersInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrgPersInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrgPersInfoCompleted(Me, New GetOrgPersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployee_By_CompanyCode_Name_PIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmployee_By_CompanyCode_Name_PIN(ByVal Pin As String, ByVal Name As String, ByVal CompanyCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmployee_By_CompanyCode_Name_PIN", New Object() {Pin, Name, CompanyCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmployee_By_CompanyCode_Name_PINAsync(ByVal Pin As String, ByVal Name As String, ByVal CompanyCode As String)
            Me.ListEmployee_By_CompanyCode_Name_PINAsync(Pin, Name, CompanyCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmployee_By_CompanyCode_Name_PINAsync(ByVal Pin As String, ByVal Name As String, ByVal CompanyCode As String, ByVal userState As Object)
            If (Me.ListEmployee_By_CompanyCode_Name_PINOperationCompleted Is Nothing) Then
                Me.ListEmployee_By_CompanyCode_Name_PINOperationCompleted = AddressOf Me.OnListEmployee_By_CompanyCode_Name_PINOperationCompleted
            End If
            Me.InvokeAsync("ListEmployee_By_CompanyCode_Name_PIN", New Object() {Pin, Name, CompanyCode}, Me.ListEmployee_By_CompanyCode_Name_PINOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmployee_By_CompanyCode_Name_PINOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmployee_By_CompanyCode_Name_PINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmployee_By_CompanyCode_Name_PINCompleted(Me, New ListEmployee_By_CompanyCode_Name_PINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOrgInfobyEmpID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllOrgInfobyEmpID(ByVal pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAllOrgInfobyEmpID", New Object() {pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllOrgInfobyEmpIDAsync(ByVal pin As String)
            Me.GetAllOrgInfobyEmpIDAsync(pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllOrgInfobyEmpIDAsync(ByVal pin As String, ByVal userState As Object)
            If (Me.GetAllOrgInfobyEmpIDOperationCompleted Is Nothing) Then
                Me.GetAllOrgInfobyEmpIDOperationCompleted = AddressOf Me.OnGetAllOrgInfobyEmpIDOperationCompleted
            End If
            Me.InvokeAsync("GetAllOrgInfobyEmpID", New Object() {pin}, Me.GetAllOrgInfobyEmpIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllOrgInfobyEmpIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllOrgInfobyEmpIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllOrgInfobyEmpIDCompleted(Me, New GetAllOrgInfobyEmpIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrgInfobyOrgCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrgInfobyOrgCode(ByVal orgCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOrgInfobyOrgCode", New Object() {orgCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrgInfobyOrgCodeAsync(ByVal orgCode As String)
            Me.GetOrgInfobyOrgCodeAsync(orgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrgInfobyOrgCodeAsync(ByVal orgCode As String, ByVal userState As Object)
            If (Me.GetOrgInfobyOrgCodeOperationCompleted Is Nothing) Then
                Me.GetOrgInfobyOrgCodeOperationCompleted = AddressOf Me.OnGetOrgInfobyOrgCodeOperationCompleted
            End If
            Me.InvokeAsync("GetOrgInfobyOrgCode", New Object() {orgCode}, Me.GetOrgInfobyOrgCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrgInfobyOrgCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrgInfobyOrgCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrgInfobyOrgCodeCompleted(Me, New GetOrgInfobyOrgCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListPinsbyOrgCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListPinsbyOrgCode(ByVal orgCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListPinsbyOrgCode", New Object() {orgCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListPinsbyOrgCodeAsync(ByVal orgCode As String)
            Me.ListPinsbyOrgCodeAsync(orgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListPinsbyOrgCodeAsync(ByVal orgCode As String, ByVal userState As Object)
            If (Me.ListPinsbyOrgCodeOperationCompleted Is Nothing) Then
                Me.ListPinsbyOrgCodeOperationCompleted = AddressOf Me.OnListPinsbyOrgCodeOperationCompleted
            End If
            Me.InvokeAsync("ListPinsbyOrgCode", New Object() {orgCode}, Me.ListPinsbyOrgCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnListPinsbyOrgCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListPinsbyOrgCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListPinsbyOrgCodeCompleted(Me, New ListPinsbyOrgCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStaffCountByPositionID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStaffCountByPositionID(ByVal Position As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStaffCountByPositionID", New Object() {Position})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStaffCountByPositionIDAsync(ByVal Position As String)
            Me.GetStaffCountByPositionIDAsync(Position, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStaffCountByPositionIDAsync(ByVal Position As String, ByVal userState As Object)
            If (Me.GetStaffCountByPositionIDOperationCompleted Is Nothing) Then
                Me.GetStaffCountByPositionIDOperationCompleted = AddressOf Me.OnGetStaffCountByPositionIDOperationCompleted
            End If
            Me.InvokeAsync("GetStaffCountByPositionID", New Object() {Position}, Me.GetStaffCountByPositionIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStaffCountByPositionIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStaffCountByPositionIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStaffCountByPositionIDCompleted(Me, New GetStaffCountByPositionIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPG", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllPG() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAllPG", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllPGAsync()
            Me.GetAllPGAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllPGAsync(ByVal userState As Object)
            If (Me.GetAllPGOperationCompleted Is Nothing) Then
                Me.GetAllPGOperationCompleted = AddressOf Me.OnGetAllPGOperationCompleted
            End If
            Me.InvokeAsync("GetAllPG", New Object(-1) {}, Me.GetAllPGOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllPGOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllPGCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllPGCompleted(Me, New GetAllPGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApprover", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApprover(ByVal EmpID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetApprover", New Object() {EmpID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApproverAsync(ByVal EmpID As String)
            Me.GetApproverAsync(EmpID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApproverAsync(ByVal EmpID As String, ByVal userState As Object)
            If (Me.GetApproverOperationCompleted Is Nothing) Then
                Me.GetApproverOperationCompleted = AddressOf Me.OnGetApproverOperationCompleted
            End If
            Me.InvokeAsync("GetApprover", New Object() {EmpID}, Me.GetApproverOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApproverOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApproverCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApproverCompleted(Me, New GetApproverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStaffCountbyOrgCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStaffCountbyOrgCode(ByVal orgcode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStaffCountbyOrgCode", New Object() {orgcode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStaffCountbyOrgCodeAsync(ByVal orgcode As String)
            Me.GetStaffCountbyOrgCodeAsync(orgcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStaffCountbyOrgCodeAsync(ByVal orgcode As String, ByVal userState As Object)
            If (Me.GetStaffCountbyOrgCodeOperationCompleted Is Nothing) Then
                Me.GetStaffCountbyOrgCodeOperationCompleted = AddressOf Me.OnGetStaffCountbyOrgCodeOperationCompleted
            End If
            Me.InvokeAsync("GetStaffCountbyOrgCode", New Object() {orgcode}, Me.GetStaffCountbyOrgCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStaffCountbyOrgCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStaffCountbyOrgCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStaffCountbyOrgCodeCompleted(Me, New GetStaffCountbyOrgCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrganizationName(ByVal vOrgCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOrganizationName", New Object() {vOrgCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrganizationNameAsync(ByVal vOrgCode As String)
            Me.GetOrganizationNameAsync(vOrgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrganizationNameAsync(ByVal vOrgCode As String, ByVal userState As Object)
            If (Me.GetOrganizationNameOperationCompleted Is Nothing) Then
                Me.GetOrganizationNameOperationCompleted = AddressOf Me.OnGetOrganizationNameOperationCompleted
            End If
            Me.InvokeAsync("GetOrganizationName", New Object() {vOrgCode}, Me.GetOrganizationNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrganizationNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrganizationNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrganizationNameCompleted(Me, New GetOrganizationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyByOrgCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCompanyByOrgCode(ByVal vOrgID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCompanyByOrgCode", New Object() {vOrgID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCompanyByOrgCodeAsync(ByVal vOrgID As String)
            Me.GetCompanyByOrgCodeAsync(vOrgID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCompanyByOrgCodeAsync(ByVal vOrgID As String, ByVal userState As Object)
            If (Me.GetCompanyByOrgCodeOperationCompleted Is Nothing) Then
                Me.GetCompanyByOrgCodeOperationCompleted = AddressOf Me.OnGetCompanyByOrgCodeOperationCompleted
            End If
            Me.InvokeAsync("GetCompanyByOrgCode", New Object() {vOrgID}, Me.GetCompanyByOrgCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCompanyByOrgCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCompanyByOrgCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCompanyByOrgCodeCompleted(Me, New GetCompanyByOrgCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeIDByEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeIDByEmail(ByVal vEmail As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeIDByEmail", New Object() {vEmail})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeIDByEmailAsync(ByVal vEmail As String)
            Me.GetEmployeeIDByEmailAsync(vEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeIDByEmailAsync(ByVal vEmail As String, ByVal userState As Object)
            If (Me.GetEmployeeIDByEmailOperationCompleted Is Nothing) Then
                Me.GetEmployeeIDByEmailOperationCompleted = AddressOf Me.OnGetEmployeeIDByEmailOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeIDByEmail", New Object() {vEmail}, Me.GetEmployeeIDByEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeIDByEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeIDByEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeIDByEmailCompleted(Me, New GetEmployeeIDByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListEmployeePositionAndOrganization", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetListEmployeePositionAndOrganization(ByVal userStamp As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetListEmployeePositionAndOrganization", New Object() {userStamp})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetListEmployeePositionAndOrganizationAsync(ByVal userStamp As String)
            Me.GetListEmployeePositionAndOrganizationAsync(userStamp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetListEmployeePositionAndOrganizationAsync(ByVal userStamp As String, ByVal userState As Object)
            If (Me.GetListEmployeePositionAndOrganizationOperationCompleted Is Nothing) Then
                Me.GetListEmployeePositionAndOrganizationOperationCompleted = AddressOf Me.OnGetListEmployeePositionAndOrganizationOperationCompleted
            End If
            Me.InvokeAsync("GetListEmployeePositionAndOrganization", New Object() {userStamp}, Me.GetListEmployeePositionAndOrganizationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetListEmployeePositionAndOrganizationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetListEmployeePositionAndOrganizationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetListEmployeePositionAndOrganizationCompleted(Me, New GetListEmployeePositionAndOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllPinsUnderOrgCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllPinsUnderOrgCode(ByVal vOrgCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllPinsUnderOrgCode", New Object() {vOrgCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeAsync(ByVal vOrgCode As String)
            Me.ListAllPinsUnderOrgCodeAsync(vOrgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeAsync(ByVal vOrgCode As String, ByVal userState As Object)
            If (Me.ListAllPinsUnderOrgCodeOperationCompleted Is Nothing) Then
                Me.ListAllPinsUnderOrgCodeOperationCompleted = AddressOf Me.OnListAllPinsUnderOrgCodeOperationCompleted
            End If
            Me.InvokeAsync("ListAllPinsUnderOrgCode", New Object() {vOrgCode}, Me.ListAllPinsUnderOrgCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllPinsUnderOrgCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllPinsUnderOrgCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllPinsUnderOrgCodeCompleted(Me, New ListAllPinsUnderOrgCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllPinsUnderOrgCodeByPrefixPin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllPinsUnderOrgCodeByPrefixPin(ByVal vOrgCode As String, ByVal vPin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllPinsUnderOrgCodeByPrefixPin", New Object() {vOrgCode, vPin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixPinAsync(ByVal vOrgCode As String, ByVal vPin As String)
            Me.ListAllPinsUnderOrgCodeByPrefixPinAsync(vOrgCode, vPin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixPinAsync(ByVal vOrgCode As String, ByVal vPin As String, ByVal userState As Object)
            If (Me.ListAllPinsUnderOrgCodeByPrefixPinOperationCompleted Is Nothing) Then
                Me.ListAllPinsUnderOrgCodeByPrefixPinOperationCompleted = AddressOf Me.OnListAllPinsUnderOrgCodeByPrefixPinOperationCompleted
            End If
            Me.InvokeAsync("ListAllPinsUnderOrgCodeByPrefixPin", New Object() {vOrgCode, vPin}, Me.ListAllPinsUnderOrgCodeByPrefixPinOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllPinsUnderOrgCodeByPrefixPinOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllPinsUnderOrgCodeByPrefixPinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllPinsUnderOrgCodeByPrefixPinCompleted(Me, New ListAllPinsUnderOrgCodeByPrefixPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllPinsUnderOrgCodeByPrefixEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllPinsUnderOrgCodeByPrefixEmail(ByVal vOrgCode As String, ByVal vEmail As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllPinsUnderOrgCodeByPrefixEmail", New Object() {vOrgCode, vEmail})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixEmailAsync(ByVal vOrgCode As String, ByVal vEmail As String)
            Me.ListAllPinsUnderOrgCodeByPrefixEmailAsync(vOrgCode, vEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixEmailAsync(ByVal vOrgCode As String, ByVal vEmail As String, ByVal userState As Object)
            If (Me.ListAllPinsUnderOrgCodeByPrefixEmailOperationCompleted Is Nothing) Then
                Me.ListAllPinsUnderOrgCodeByPrefixEmailOperationCompleted = AddressOf Me.OnListAllPinsUnderOrgCodeByPrefixEmailOperationCompleted
            End If
            Me.InvokeAsync("ListAllPinsUnderOrgCodeByPrefixEmail", New Object() {vOrgCode, vEmail}, Me.ListAllPinsUnderOrgCodeByPrefixEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllPinsUnderOrgCodeByPrefixEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllPinsUnderOrgCodeByPrefixEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllPinsUnderOrgCodeByPrefixEmailCompleted(Me, New ListAllPinsUnderOrgCodeByPrefixEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllPinsUnderOrgCodeByPrefixThaiName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllPinsUnderOrgCodeByPrefixThaiName(ByVal vOrgCode As String, ByVal vThName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllPinsUnderOrgCodeByPrefixThaiName", New Object() {vOrgCode, vThName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixThaiNameAsync(ByVal vOrgCode As String, ByVal vThName As String)
            Me.ListAllPinsUnderOrgCodeByPrefixThaiNameAsync(vOrgCode, vThName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixThaiNameAsync(ByVal vOrgCode As String, ByVal vThName As String, ByVal userState As Object)
            If (Me.ListAllPinsUnderOrgCodeByPrefixThaiNameOperationCompleted Is Nothing) Then
                Me.ListAllPinsUnderOrgCodeByPrefixThaiNameOperationCompleted = AddressOf Me.OnListAllPinsUnderOrgCodeByPrefixThaiNameOperationCompleted
            End If
            Me.InvokeAsync("ListAllPinsUnderOrgCodeByPrefixThaiName", New Object() {vOrgCode, vThName}, Me.ListAllPinsUnderOrgCodeByPrefixThaiNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllPinsUnderOrgCodeByPrefixThaiNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllPinsUnderOrgCodeByPrefixThaiNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllPinsUnderOrgCodeByPrefixThaiNameCompleted(Me, New ListAllPinsUnderOrgCodeByPrefixThaiNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllPinsUnderOrgCodeByPrefixThaiSurName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllPinsUnderOrgCodeByPrefixThaiSurName(ByVal vOrgCode As String, ByVal vThSurname As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllPinsUnderOrgCodeByPrefixThaiSurName", New Object() {vOrgCode, vThSurname})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixThaiSurNameAsync(ByVal vOrgCode As String, ByVal vThSurname As String)
            Me.ListAllPinsUnderOrgCodeByPrefixThaiSurNameAsync(vOrgCode, vThSurname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeByPrefixThaiSurNameAsync(ByVal vOrgCode As String, ByVal vThSurname As String, ByVal userState As Object)
            If (Me.ListAllPinsUnderOrgCodeByPrefixThaiSurNameOperationCompleted Is Nothing) Then
                Me.ListAllPinsUnderOrgCodeByPrefixThaiSurNameOperationCompleted = AddressOf Me.OnListAllPinsUnderOrgCodeByPrefixThaiSurNameOperationCompleted
            End If
            Me.InvokeAsync("ListAllPinsUnderOrgCodeByPrefixThaiSurName", New Object() {vOrgCode, vThSurname}, Me.ListAllPinsUnderOrgCodeByPrefixThaiSurNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllPinsUnderOrgCodeByPrefixThaiSurNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompleted(Me, New ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPosition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllPosition(ByVal vPin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAllPosition", New Object() {vPin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllPositionAsync(ByVal vPin As String)
            Me.GetAllPositionAsync(vPin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllPositionAsync(ByVal vPin As String, ByVal userState As Object)
            If (Me.GetAllPositionOperationCompleted Is Nothing) Then
                Me.GetAllPositionOperationCompleted = AddressOf Me.OnGetAllPositionOperationCompleted
            End If
            Me.InvokeAsync("GetAllPosition", New Object() {vPin}, Me.GetAllPositionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllPositionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllPositionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllPositionCompleted(Me, New GetAllPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchOrgInfoByOrgCodeOrOrgDesc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchOrgInfoByOrgCodeOrOrgDesc(ByVal vCompanyCode As String, ByVal vOrgDesc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchOrgInfoByOrgCodeOrOrgDesc", New Object() {vCompanyCode, vOrgDesc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchOrgInfoByOrgCodeOrOrgDescAsync(ByVal vCompanyCode As String, ByVal vOrgDesc As String)
            Me.SearchOrgInfoByOrgCodeOrOrgDescAsync(vCompanyCode, vOrgDesc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchOrgInfoByOrgCodeOrOrgDescAsync(ByVal vCompanyCode As String, ByVal vOrgDesc As String, ByVal userState As Object)
            If (Me.SearchOrgInfoByOrgCodeOrOrgDescOperationCompleted Is Nothing) Then
                Me.SearchOrgInfoByOrgCodeOrOrgDescOperationCompleted = AddressOf Me.OnSearchOrgInfoByOrgCodeOrOrgDescOperationCompleted
            End If
            Me.InvokeAsync("SearchOrgInfoByOrgCodeOrOrgDesc", New Object() {vCompanyCode, vOrgDesc}, Me.SearchOrgInfoByOrgCodeOrOrgDescOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchOrgInfoByOrgCodeOrOrgDescOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchOrgInfoByOrgCodeOrOrgDescCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchOrgInfoByOrgCodeOrOrgDescCompleted(Me, New SearchOrgInfoByOrgCodeOrOrgDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchOrgInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchOrgInfo(ByVal vCompanyCode As String, ByVal vOrgDesc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchOrgInfo", New Object() {vCompanyCode, vOrgDesc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchOrgInfoAsync(ByVal vCompanyCode As String, ByVal vOrgDesc As String)
            Me.SearchOrgInfoAsync(vCompanyCode, vOrgDesc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchOrgInfoAsync(ByVal vCompanyCode As String, ByVal vOrgDesc As String, ByVal userState As Object)
            If (Me.SearchOrgInfoOperationCompleted Is Nothing) Then
                Me.SearchOrgInfoOperationCompleted = AddressOf Me.OnSearchOrgInfoOperationCompleted
            End If
            Me.InvokeAsync("SearchOrgInfo", New Object() {vCompanyCode, vOrgDesc}, Me.SearchOrgInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchOrgInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchOrgInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchOrgInfoCompleted(Me, New SearchOrgInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListTemporaryPinByNewPin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListTemporaryPinByNewPin(ByVal pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListTemporaryPinByNewPin", New Object() {pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListTemporaryPinByNewPinAsync(ByVal pin As String)
            Me.ListTemporaryPinByNewPinAsync(pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListTemporaryPinByNewPinAsync(ByVal pin As String, ByVal userState As Object)
            If (Me.ListTemporaryPinByNewPinOperationCompleted Is Nothing) Then
                Me.ListTemporaryPinByNewPinOperationCompleted = AddressOf Me.OnListTemporaryPinByNewPinOperationCompleted
            End If
            Me.InvokeAsync("ListTemporaryPinByNewPin", New Object() {pin}, Me.ListTemporaryPinByNewPinOperationCompleted, userState)
        End Sub
        
        Private Sub OnListTemporaryPinByNewPinOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListTemporaryPinByNewPinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListTemporaryPinByNewPinCompleted(Me, New ListTemporaryPinByNewPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCompany", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllCompany() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAllCompany", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllCompanyAsync()
            Me.GetAllCompanyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllCompanyAsync(ByVal userState As Object)
            If (Me.GetAllCompanyOperationCompleted Is Nothing) Then
                Me.GetAllCompanyOperationCompleted = AddressOf Me.OnGetAllCompanyOperationCompleted
            End If
            Me.InvokeAsync("GetAllCompany", New Object(-1) {}, Me.GetAllCompanyOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllCompanyOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllCompanyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllCompanyCompleted(Me, New GetAllCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfile(ByVal vPin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfile", New Object() {vPin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileAsync(ByVal vPin As String)
            Me.GetEmployeeProfileAsync(vPin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileAsync(ByVal vPin As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileOperationCompleted = AddressOf Me.OnGetEmployeeProfileOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfile", New Object() {vPin}, Me.GetEmployeeProfileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileCompleted(Me, New GetEmployeeProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganization", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrganization(ByVal orgcode As String, ByVal orgname As String, ByVal orgdesc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOrganization", New Object() {orgcode, orgname, orgdesc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrganizationAsync(ByVal orgcode As String, ByVal orgname As String, ByVal orgdesc As String)
            Me.GetOrganizationAsync(orgcode, orgname, orgdesc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrganizationAsync(ByVal orgcode As String, ByVal orgname As String, ByVal orgdesc As String, ByVal userState As Object)
            If (Me.GetOrganizationOperationCompleted Is Nothing) Then
                Me.GetOrganizationOperationCompleted = AddressOf Me.OnGetOrganizationOperationCompleted
            End If
            Me.InvokeAsync("GetOrganization", New Object() {orgcode, orgname, orgdesc}, Me.GetOrganizationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrganizationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrganizationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrganizationCompleted(Me, New GetOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmployeeProfileByPIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmployeeProfileByPIN(ByVal pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmployeeProfileByPIN", New Object() {pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPINAsync(ByVal pin As String)
            Me.ListEmployeeProfileByPINAsync(pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmployeeProfileByPINAsync(ByVal pin As String, ByVal userState As Object)
            If (Me.ListEmployeeProfileByPINOperationCompleted Is Nothing) Then
                Me.ListEmployeeProfileByPINOperationCompleted = AddressOf Me.OnListEmployeeProfileByPINOperationCompleted
            End If
            Me.InvokeAsync("ListEmployeeProfileByPIN", New Object() {pin}, Me.ListEmployeeProfileByPINOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmployeeProfileByPINOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmployeeProfileByPINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmployeeProfileByPINCompleted(Me, New ListEmployeeProfileByPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApproverProfileByPIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetApproverProfileByPIN(ByVal pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetApproverProfileByPIN", New Object() {pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetApproverProfileByPINAsync(ByVal pin As String)
            Me.GetApproverProfileByPINAsync(pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetApproverProfileByPINAsync(ByVal pin As String, ByVal userState As Object)
            If (Me.GetApproverProfileByPINOperationCompleted Is Nothing) Then
                Me.GetApproverProfileByPINOperationCompleted = AddressOf Me.OnGetApproverProfileByPINOperationCompleted
            End If
            Me.InvokeAsync("GetApproverProfileByPIN", New Object() {pin}, Me.GetApproverProfileByPINOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetApproverProfileByPINOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetApproverProfileByPINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetApproverProfileByPINCompleted(Me, New GetApproverProfileByPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixEngName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixEngName(ByVal empEngName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixEngName", New Object() {empEngName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixEngNameAsync(ByVal empEngName As String)
            Me.GetEmployeeProfileByPrefixEngNameAsync(empEngName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixEngNameAsync(ByVal empEngName As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixEngNameOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixEngNameOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixEngNameOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixEngName", New Object() {empEngName}, Me.GetEmployeeProfileByPrefixEngNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixEngNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixEngNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixEngNameCompleted(Me, New GetEmployeeProfileByPrefixEngNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixEngLastName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixEngLastName(ByVal empEngLastName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixEngLastName", New Object() {empEngLastName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixEngLastNameAsync(ByVal empEngLastName As String)
            Me.GetEmployeeProfileByPrefixEngLastNameAsync(empEngLastName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixEngLastNameAsync(ByVal empEngLastName As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixEngLastNameOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixEngLastNameOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixEngLastNameOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixEngLastName", New Object() {empEngLastName}, Me.GetEmployeeProfileByPrefixEngLastNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixEngLastNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixEngLastNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixEngLastNameCompleted(Me, New GetEmployeeProfileByPrefixEngLastNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixThaiName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixThaiName(ByVal empThaiName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixThaiName", New Object() {empThaiName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixThaiNameAsync(ByVal empThaiName As String)
            Me.GetEmployeeProfileByPrefixThaiNameAsync(empThaiName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixThaiNameAsync(ByVal empThaiName As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixThaiNameOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixThaiNameOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixThaiNameOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixThaiName", New Object() {empThaiName}, Me.GetEmployeeProfileByPrefixThaiNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixThaiNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixThaiNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixThaiNameCompleted(Me, New GetEmployeeProfileByPrefixThaiNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixThaiLastName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixThaiLastName(ByVal empThaiLastName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixThaiLastName", New Object() {empThaiLastName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixThaiLastNameAsync(ByVal empThaiLastName As String)
            Me.GetEmployeeProfileByPrefixThaiLastNameAsync(empThaiLastName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixThaiLastNameAsync(ByVal empThaiLastName As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixThaiLastNameOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixThaiLastNameOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixThaiLastNameOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixThaiLastName", New Object() {empThaiLastName}, Me.GetEmployeeProfileByPrefixThaiLastNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixThaiLastNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixThaiLastNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixThaiLastNameCompleted(Me, New GetEmployeeProfileByPrefixThaiLastNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixEmail(ByVal empEmail As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixEmail", New Object() {empEmail})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixEmailAsync(ByVal empEmail As String)
            Me.GetEmployeeProfileByPrefixEmailAsync(empEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixEmailAsync(ByVal empEmail As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixEmailOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixEmailOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixEmailOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixEmail", New Object() {empEmail}, Me.GetEmployeeProfileByPrefixEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixEmailCompleted(Me, New GetEmployeeProfileByPrefixEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixPin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixPin(ByVal empPin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixPin", New Object() {empPin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixPinAsync(ByVal empPin As String)
            Me.GetEmployeeProfileByPrefixPinAsync(empPin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixPinAsync(ByVal empPin As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixPinOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixPinOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixPinOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixPin", New Object() {empPin}, Me.GetEmployeeProfileByPrefixPinOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixPinOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixPinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixPinCompleted(Me, New GetEmployeeProfileByPrefixPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixOrgcode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixOrgcode(ByVal empOrgcode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixOrgcode", New Object() {empOrgcode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixOrgcodeAsync(ByVal empOrgcode As String)
            Me.GetEmployeeProfileByPrefixOrgcodeAsync(empOrgcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixOrgcodeAsync(ByVal empOrgcode As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixOrgcodeOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixOrgcodeOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixOrgcodeOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixOrgcode", New Object() {empOrgcode}, Me.GetEmployeeProfileByPrefixOrgcodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixOrgcodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixOrgcodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixOrgcodeCompleted(Me, New GetEmployeeProfileByPrefixOrgcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixOrgname", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixOrgname(ByVal empOrgname As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixOrgname", New Object() {empOrgname})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixOrgnameAsync(ByVal empOrgname As String)
            Me.GetEmployeeProfileByPrefixOrgnameAsync(empOrgname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixOrgnameAsync(ByVal empOrgname As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixOrgnameOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixOrgnameOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixOrgnameOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixOrgname", New Object() {empOrgname}, Me.GetEmployeeProfileByPrefixOrgnameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixOrgnameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixOrgnameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixOrgnameCompleted(Me, New GetEmployeeProfileByPrefixOrgnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByPrefixOrgdesc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByPrefixOrgdesc(ByVal empOrgdesc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByPrefixOrgdesc", New Object() {empOrgdesc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixOrgdescAsync(ByVal empOrgdesc As String)
            Me.GetEmployeeProfileByPrefixOrgdescAsync(empOrgdesc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByPrefixOrgdescAsync(ByVal empOrgdesc As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByPrefixOrgdescOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByPrefixOrgdescOperationCompleted = AddressOf Me.OnGetEmployeeProfileByPrefixOrgdescOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByPrefixOrgdesc", New Object() {empOrgdesc}, Me.GetEmployeeProfileByPrefixOrgdescOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByPrefixOrgdescOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByPrefixOrgdescCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByPrefixOrgdescCompleted(Me, New GetEmployeeProfileByPrefixOrgdescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByEmail(ByVal vEmail As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByEmail", New Object() {vEmail})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByEmailAsync(ByVal vEmail As String)
            Me.GetEmployeeProfileByEmailAsync(vEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByEmailAsync(ByVal vEmail As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByEmailOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByEmailOperationCompleted = AddressOf Me.OnGetEmployeeProfileByEmailOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByEmail", New Object() {vEmail}, Me.GetEmployeeProfileByEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByEmailCompleted(Me, New GetEmployeeProfileByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllApprover", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllApprover(ByVal pin As String, ByVal position As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllApprover", New Object() {pin, position})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllApproverAsync(ByVal pin As String, ByVal position As String)
            Me.ListAllApproverAsync(pin, position, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllApproverAsync(ByVal pin As String, ByVal position As String, ByVal userState As Object)
            If (Me.ListAllApproverOperationCompleted Is Nothing) Then
                Me.ListAllApproverOperationCompleted = AddressOf Me.OnListAllApproverOperationCompleted
            End If
            Me.InvokeAsync("ListAllApprover", New Object() {pin, position}, Me.ListAllApproverOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllApproverOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllApproverCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllApproverCompleted(Me, New ListAllApproverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListEmployeeUnderApprover", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetListEmployeeUnderApprover(ByVal Pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetListEmployeeUnderApprover", New Object() {Pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetListEmployeeUnderApproverAsync(ByVal Pin As String)
            Me.GetListEmployeeUnderApproverAsync(Pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetListEmployeeUnderApproverAsync(ByVal Pin As String, ByVal userState As Object)
            If (Me.GetListEmployeeUnderApproverOperationCompleted Is Nothing) Then
                Me.GetListEmployeeUnderApproverOperationCompleted = AddressOf Me.OnGetListEmployeeUnderApproverOperationCompleted
            End If
            Me.InvokeAsync("GetListEmployeeUnderApprover", New Object() {Pin}, Me.GetListEmployeeUnderApproverOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetListEmployeeUnderApproverOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetListEmployeeUnderApproverCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetListEmployeeUnderApproverCompleted(Me, New GetListEmployeeUnderApproverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJobKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJobKey(ByVal jobKey As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetJobKey", New Object() {jobKey})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJobKeyAsync(ByVal jobKey As String)
            Me.GetJobKeyAsync(jobKey, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJobKeyAsync(ByVal jobKey As String, ByVal userState As Object)
            If (Me.GetJobKeyOperationCompleted Is Nothing) Then
                Me.GetJobKeyOperationCompleted = AddressOf Me.OnGetJobKeyOperationCompleted
            End If
            Me.InvokeAsync("GetJobKey", New Object() {jobKey}, Me.GetJobKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJobKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJobKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJobKeyCompleted(Me, New GetJobKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchEmpDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchEmpDetail( _
                    ByVal co As String,  _
                    ByVal bu As String,  _
                    ByVal dp As String,  _
                    ByVal sc As String,  _
                    ByVal fc As String,  _
                    ByVal engName As String,  _
                    ByVal engSurName As String,  _
                    ByVal thName As String,  _
                    ByVal thSurName As String,  _
                    ByVal pos As String,  _
                    ByVal nickName As String,  _
                    ByVal job As String,  _
                    ByVal pin As String,  _
                    ByVal userStamp As String,  _
                    ByVal TelNo As String,  _
                    ByVal MobileNo As String,  _
                    ByVal ManagerName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchEmpDetail", New Object() {co, bu, dp, sc, fc, engName, engSurName, thName, thSurName, pos, nickName, job, pin, userStamp, TelNo, MobileNo, ManagerName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchEmpDetailAsync( _
                    ByVal co As String,  _
                    ByVal bu As String,  _
                    ByVal dp As String,  _
                    ByVal sc As String,  _
                    ByVal fc As String,  _
                    ByVal engName As String,  _
                    ByVal engSurName As String,  _
                    ByVal thName As String,  _
                    ByVal thSurName As String,  _
                    ByVal pos As String,  _
                    ByVal nickName As String,  _
                    ByVal job As String,  _
                    ByVal pin As String,  _
                    ByVal userStamp As String,  _
                    ByVal TelNo As String,  _
                    ByVal MobileNo As String,  _
                    ByVal ManagerName As String)
            Me.SearchEmpDetailAsync(co, bu, dp, sc, fc, engName, engSurName, thName, thSurName, pos, nickName, job, pin, userStamp, TelNo, MobileNo, ManagerName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchEmpDetailAsync( _
                    ByVal co As String,  _
                    ByVal bu As String,  _
                    ByVal dp As String,  _
                    ByVal sc As String,  _
                    ByVal fc As String,  _
                    ByVal engName As String,  _
                    ByVal engSurName As String,  _
                    ByVal thName As String,  _
                    ByVal thSurName As String,  _
                    ByVal pos As String,  _
                    ByVal nickName As String,  _
                    ByVal job As String,  _
                    ByVal pin As String,  _
                    ByVal userStamp As String,  _
                    ByVal TelNo As String,  _
                    ByVal MobileNo As String,  _
                    ByVal ManagerName As String,  _
                    ByVal userState As Object)
            If (Me.SearchEmpDetailOperationCompleted Is Nothing) Then
                Me.SearchEmpDetailOperationCompleted = AddressOf Me.OnSearchEmpDetailOperationCompleted
            End If
            Me.InvokeAsync("SearchEmpDetail", New Object() {co, bu, dp, sc, fc, engName, engSurName, thName, thSurName, pos, nickName, job, pin, userStamp, TelNo, MobileNo, ManagerName}, Me.SearchEmpDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchEmpDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchEmpDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchEmpDetailCompleted(Me, New SearchEmpDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search_Employee", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Search_Employee(ByVal Employee_ID As String, ByVal Emp_Name As String, ByVal Emp_Last_Name As String, ByVal ENGEmp_Name As String, ByVal ENGEmp_Last_Name As String, ByVal Org_ID As String, ByVal Org_Name As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Search_Employee", New Object() {Employee_ID, Emp_Name, Emp_Last_Name, ENGEmp_Name, ENGEmp_Last_Name, Org_ID, Org_Name})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Search_EmployeeAsync(ByVal Employee_ID As String, ByVal Emp_Name As String, ByVal Emp_Last_Name As String, ByVal ENGEmp_Name As String, ByVal ENGEmp_Last_Name As String, ByVal Org_ID As String, ByVal Org_Name As String)
            Me.Search_EmployeeAsync(Employee_ID, Emp_Name, Emp_Last_Name, ENGEmp_Name, ENGEmp_Last_Name, Org_ID, Org_Name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Search_EmployeeAsync(ByVal Employee_ID As String, ByVal Emp_Name As String, ByVal Emp_Last_Name As String, ByVal ENGEmp_Name As String, ByVal ENGEmp_Last_Name As String, ByVal Org_ID As String, ByVal Org_Name As String, ByVal userState As Object)
            If (Me.Search_EmployeeOperationCompleted Is Nothing) Then
                Me.Search_EmployeeOperationCompleted = AddressOf Me.OnSearch_EmployeeOperationCompleted
            End If
            Me.InvokeAsync("Search_Employee", New Object() {Employee_ID, Emp_Name, Emp_Last_Name, ENGEmp_Name, ENGEmp_Last_Name, Org_ID, Org_Name}, Me.Search_EmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearch_EmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Search_EmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Search_EmployeeCompleted(Me, New Search_EmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/List_ActingApprover", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function List_ActingApprover(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("List_ActingApprover", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub List_ActingApproverAsync(ByVal ds As System.Data.DataSet)
            Me.List_ActingApproverAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub List_ActingApproverAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.List_ActingApproverOperationCompleted Is Nothing) Then
                Me.List_ActingApproverOperationCompleted = AddressOf Me.OnList_ActingApproverOperationCompleted
            End If
            Me.InvokeAsync("List_ActingApprover", New Object() {ds}, Me.List_ActingApproverOperationCompleted, userState)
        End Sub
        
        Private Sub OnList_ActingApproverOperationCompleted(ByVal arg As Object)
            If (Not (Me.List_ActingApproverCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent List_ActingApproverCompleted(Me, New List_ActingApproverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOrganizeByOrganizeLevel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListOrganizeByOrganizeLevel(ByVal CompanyCode As String, ByVal OrganizeLevel As String, ByVal OrganizeCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListOrganizeByOrganizeLevel", New Object() {CompanyCode, OrganizeLevel, OrganizeCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListOrganizeByOrganizeLevelAsync(ByVal CompanyCode As String, ByVal OrganizeLevel As String, ByVal OrganizeCode As String)
            Me.ListOrganizeByOrganizeLevelAsync(CompanyCode, OrganizeLevel, OrganizeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListOrganizeByOrganizeLevelAsync(ByVal CompanyCode As String, ByVal OrganizeLevel As String, ByVal OrganizeCode As String, ByVal userState As Object)
            If (Me.ListOrganizeByOrganizeLevelOperationCompleted Is Nothing) Then
                Me.ListOrganizeByOrganizeLevelOperationCompleted = AddressOf Me.OnListOrganizeByOrganizeLevelOperationCompleted
            End If
            Me.InvokeAsync("ListOrganizeByOrganizeLevel", New Object() {CompanyCode, OrganizeLevel, OrganizeCode}, Me.ListOrganizeByOrganizeLevelOperationCompleted, userState)
        End Sub
        
        Private Sub OnListOrganizeByOrganizeLevelOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListOrganizeByOrganizeLevelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListOrganizeByOrganizeLevelCompleted(Me, New ListOrganizeByOrganizeLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchEmployeeOrg", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchEmployeeOrg(ByVal employeeID As String, ByVal enName As String, ByVal enSurName As String, ByVal thName As String, ByVal thSurName As String, ByVal email As String, ByVal company As String, ByVal buname As String, ByVal buhname As String, ByVal orgname As String, ByVal dpname As String, ByVal positiondesc As String, ByVal positionid As String, ByVal EMPLOYEETYPE As String, ByVal EMPLOYEEGROUP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchEmployeeOrg", New Object() {employeeID, enName, enSurName, thName, thSurName, email, company, buname, buhname, orgname, dpname, positiondesc, positionid, EMPLOYEETYPE, EMPLOYEEGROUP})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchEmployeeOrgAsync(ByVal employeeID As String, ByVal enName As String, ByVal enSurName As String, ByVal thName As String, ByVal thSurName As String, ByVal email As String, ByVal company As String, ByVal buname As String, ByVal buhname As String, ByVal orgname As String, ByVal dpname As String, ByVal positiondesc As String, ByVal positionid As String, ByVal EMPLOYEETYPE As String, ByVal EMPLOYEEGROUP As String)
            Me.SearchEmployeeOrgAsync(employeeID, enName, enSurName, thName, thSurName, email, company, buname, buhname, orgname, dpname, positiondesc, positionid, EMPLOYEETYPE, EMPLOYEEGROUP, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchEmployeeOrgAsync( _
                    ByVal employeeID As String,  _
                    ByVal enName As String,  _
                    ByVal enSurName As String,  _
                    ByVal thName As String,  _
                    ByVal thSurName As String,  _
                    ByVal email As String,  _
                    ByVal company As String,  _
                    ByVal buname As String,  _
                    ByVal buhname As String,  _
                    ByVal orgname As String,  _
                    ByVal dpname As String,  _
                    ByVal positiondesc As String,  _
                    ByVal positionid As String,  _
                    ByVal EMPLOYEETYPE As String,  _
                    ByVal EMPLOYEEGROUP As String,  _
                    ByVal userState As Object)
            If (Me.SearchEmployeeOrgOperationCompleted Is Nothing) Then
                Me.SearchEmployeeOrgOperationCompleted = AddressOf Me.OnSearchEmployeeOrgOperationCompleted
            End If
            Me.InvokeAsync("SearchEmployeeOrg", New Object() {employeeID, enName, enSurName, thName, thSurName, email, company, buname, buhname, orgname, dpname, positiondesc, positionid, EMPLOYEETYPE, EMPLOYEEGROUP}, Me.SearchEmployeeOrgOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchEmployeeOrgOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchEmployeeOrgCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchEmployeeOrgCompleted(Me, New SearchEmployeeOrgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/List_LineApproverPositionAVPUP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function List_LineApproverPositionAVPUP(ByVal Pin As String, ByVal Position As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("List_LineApproverPositionAVPUP", New Object() {Pin, Position})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub List_LineApproverPositionAVPUPAsync(ByVal Pin As String, ByVal Position As String)
            Me.List_LineApproverPositionAVPUPAsync(Pin, Position, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub List_LineApproverPositionAVPUPAsync(ByVal Pin As String, ByVal Position As String, ByVal userState As Object)
            If (Me.List_LineApproverPositionAVPUPOperationCompleted Is Nothing) Then
                Me.List_LineApproverPositionAVPUPOperationCompleted = AddressOf Me.OnList_LineApproverPositionAVPUPOperationCompleted
            End If
            Me.InvokeAsync("List_LineApproverPositionAVPUP", New Object() {Pin, Position}, Me.List_LineApproverPositionAVPUPOperationCompleted, userState)
        End Sub
        
        Private Sub OnList_LineApproverPositionAVPUPOperationCompleted(ByVal arg As Object)
            If (Not (Me.List_LineApproverPositionAVPUPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent List_LineApproverPositionAVPUPCompleted(Me, New List_LineApproverPositionAVPUPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOrganizeLevelByCompany", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListOrganizeLevelByCompany(ByVal CompanyCode As String, ByVal OrganizeLevel As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListOrganizeLevelByCompany", New Object() {CompanyCode, OrganizeLevel})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListOrganizeLevelByCompanyAsync(ByVal CompanyCode As String, ByVal OrganizeLevel As String)
            Me.ListOrganizeLevelByCompanyAsync(CompanyCode, OrganizeLevel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListOrganizeLevelByCompanyAsync(ByVal CompanyCode As String, ByVal OrganizeLevel As String, ByVal userState As Object)
            If (Me.ListOrganizeLevelByCompanyOperationCompleted Is Nothing) Then
                Me.ListOrganizeLevelByCompanyOperationCompleted = AddressOf Me.OnListOrganizeLevelByCompanyOperationCompleted
            End If
            Me.InvokeAsync("ListOrganizeLevelByCompany", New Object() {CompanyCode, OrganizeLevel}, Me.ListOrganizeLevelByCompanyOperationCompleted, userState)
        End Sub
        
        Private Sub OnListOrganizeLevelByCompanyOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListOrganizeLevelByCompanyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListOrganizeLevelByCompanyCompleted(Me, New ListOrganizeLevelByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileByUsername", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileByUsername(ByVal username As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileByUsername", New Object() {username})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByUsernameAsync(ByVal username As String)
            Me.GetEmployeeProfileByUsernameAsync(username, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileByUsernameAsync(ByVal username As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileByUsernameOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileByUsernameOperationCompleted = AddressOf Me.OnGetEmployeeProfileByUsernameOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileByUsername", New Object() {username}, Me.GetEmployeeProfileByUsernameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileByUsernameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileByUsernameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileByUsernameCompleted(Me, New GetEmployeeProfileByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListLineOrganizeByOrganizeCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListLineOrganizeByOrganizeCode(ByVal OrgCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListLineOrganizeByOrganizeCode", New Object() {OrgCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListLineOrganizeByOrganizeCodeAsync(ByVal OrgCode As String)
            Me.ListLineOrganizeByOrganizeCodeAsync(OrgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListLineOrganizeByOrganizeCodeAsync(ByVal OrgCode As String, ByVal userState As Object)
            If (Me.ListLineOrganizeByOrganizeCodeOperationCompleted Is Nothing) Then
                Me.ListLineOrganizeByOrganizeCodeOperationCompleted = AddressOf Me.OnListLineOrganizeByOrganizeCodeOperationCompleted
            End If
            Me.InvokeAsync("ListLineOrganizeByOrganizeCode", New Object() {OrgCode}, Me.ListLineOrganizeByOrganizeCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnListLineOrganizeByOrganizeCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListLineOrganizeByOrganizeCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListLineOrganizeByOrganizeCodeCompleted(Me, New ListLineOrganizeByOrganizeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOrgDescByPrefix", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListOrgDescByPrefix(ByVal orgDesc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListOrgDescByPrefix", New Object() {orgDesc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListOrgDescByPrefixAsync(ByVal orgDesc As String)
            Me.ListOrgDescByPrefixAsync(orgDesc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListOrgDescByPrefixAsync(ByVal orgDesc As String, ByVal userState As Object)
            If (Me.ListOrgDescByPrefixOperationCompleted Is Nothing) Then
                Me.ListOrgDescByPrefixOperationCompleted = AddressOf Me.OnListOrgDescByPrefixOperationCompleted
            End If
            Me.InvokeAsync("ListOrgDescByPrefix", New Object() {orgDesc}, Me.ListOrgDescByPrefixOperationCompleted, userState)
        End Sub
        
        Private Sub OnListOrgDescByPrefixOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListOrgDescByPrefixCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListOrgDescByPrefixCompleted(Me, New ListOrgDescByPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGradeDescByPrefix", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListGradeDescByPrefix(ByVal gradeDesc As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListGradeDescByPrefix", New Object() {gradeDesc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListGradeDescByPrefixAsync(ByVal gradeDesc As String)
            Me.ListGradeDescByPrefixAsync(gradeDesc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListGradeDescByPrefixAsync(ByVal gradeDesc As String, ByVal userState As Object)
            If (Me.ListGradeDescByPrefixOperationCompleted Is Nothing) Then
                Me.ListGradeDescByPrefixOperationCompleted = AddressOf Me.OnListGradeDescByPrefixOperationCompleted
            End If
            Me.InvokeAsync("ListGradeDescByPrefix", New Object() {gradeDesc}, Me.ListGradeDescByPrefixOperationCompleted, userState)
        End Sub
        
        Private Sub OnListGradeDescByPrefixOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListGradeDescByPrefixCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListGradeDescByPrefixCompleted(Me, New ListGradeDescByPrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmpForFingerScan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmpForFingerScan(ByVal [date] As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmpForFingerScan", New Object() {[date]})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmpForFingerScanAsync(ByVal [date] As Date)
            Me.ListEmpForFingerScanAsync([date], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmpForFingerScanAsync(ByVal [date] As Date, ByVal userState As Object)
            If (Me.ListEmpForFingerScanOperationCompleted Is Nothing) Then
                Me.ListEmpForFingerScanOperationCompleted = AddressOf Me.OnListEmpForFingerScanOperationCompleted
            End If
            Me.InvokeAsync("ListEmpForFingerScan", New Object() {[date]}, Me.ListEmpForFingerScanOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmpForFingerScanOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmpForFingerScanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmpForFingerScanCompleted(Me, New ListEmpForFingerScanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmpForFingerScanResigned", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmpForFingerScanResigned(ByVal [date] As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmpForFingerScanResigned", New Object() {[date]})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmpForFingerScanResignedAsync(ByVal [date] As Date)
            Me.ListEmpForFingerScanResignedAsync([date], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmpForFingerScanResignedAsync(ByVal [date] As Date, ByVal userState As Object)
            If (Me.ListEmpForFingerScanResignedOperationCompleted Is Nothing) Then
                Me.ListEmpForFingerScanResignedOperationCompleted = AddressOf Me.OnListEmpForFingerScanResignedOperationCompleted
            End If
            Me.InvokeAsync("ListEmpForFingerScanResigned", New Object() {[date]}, Me.ListEmpForFingerScanResignedOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmpForFingerScanResignedOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmpForFingerScanResignedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmpForFingerScanResignedCompleted(Me, New ListEmpForFingerScanResignedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListEmpResigned", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListEmpResigned(ByVal [date] As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListEmpResigned", New Object() {[date]})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListEmpResignedAsync(ByVal [date] As Date)
            Me.ListEmpResignedAsync([date], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListEmpResignedAsync(ByVal [date] As Date, ByVal userState As Object)
            If (Me.ListEmpResignedOperationCompleted Is Nothing) Then
                Me.ListEmpResignedOperationCompleted = AddressOf Me.OnListEmpResignedOperationCompleted
            End If
            Me.InvokeAsync("ListEmpResigned", New Object() {[date]}, Me.ListEmpResignedOperationCompleted, userState)
        End Sub
        
        Private Sub OnListEmpResignedOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListEmpResignedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListEmpResignedCompleted(Me, New ListEmpResignedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllPinsUnderOrgCodeReNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllPinsUnderOrgCodeReNew(ByVal OrgCode As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllPinsUnderOrgCodeReNew", New Object() {OrgCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeReNewAsync(ByVal OrgCode As String)
            Me.ListAllPinsUnderOrgCodeReNewAsync(OrgCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllPinsUnderOrgCodeReNewAsync(ByVal OrgCode As String, ByVal userState As Object)
            If (Me.ListAllPinsUnderOrgCodeReNewOperationCompleted Is Nothing) Then
                Me.ListAllPinsUnderOrgCodeReNewOperationCompleted = AddressOf Me.OnListAllPinsUnderOrgCodeReNewOperationCompleted
            End If
            Me.InvokeAsync("ListAllPinsUnderOrgCodeReNew", New Object() {OrgCode}, Me.ListAllPinsUnderOrgCodeReNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllPinsUnderOrgCodeReNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllPinsUnderOrgCodeReNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllPinsUnderOrgCodeReNewCompleted(Me, New ListAllPinsUnderOrgCodeReNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckEmpResigned", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckEmpResigned(ByVal ds As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CheckEmpResigned", New Object() {ds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckEmpResignedAsync(ByVal ds As System.Data.DataSet)
            Me.CheckEmpResignedAsync(ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckEmpResignedAsync(ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.CheckEmpResignedOperationCompleted Is Nothing) Then
                Me.CheckEmpResignedOperationCompleted = AddressOf Me.OnCheckEmpResignedOperationCompleted
            End If
            Me.InvokeAsync("CheckEmpResigned", New Object() {ds}, Me.CheckEmpResignedOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckEmpResignedOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckEmpResignedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckEmpResignedCompleted(Me, New CheckEmpResignedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllEmployee", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllEmployee() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getAllEmployee", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllEmployeeAsync()
            Me.getAllEmployeeAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllEmployeeAsync(ByVal userState As Object)
            If (Me.getAllEmployeeOperationCompleted Is Nothing) Then
                Me.getAllEmployeeOperationCompleted = AddressOf Me.OngetAllEmployeeOperationCompleted
            End If
            Me.InvokeAsync("getAllEmployee", New Object(-1) {}, Me.getAllEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllEmployeeCompleted(Me, New getAllEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEepForOM1", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getEepForOM1() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getEepForOM1", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEepForOM1Async()
            Me.getEepForOM1Async(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEepForOM1Async(ByVal userState As Object)
            If (Me.getEepForOM1OperationCompleted Is Nothing) Then
                Me.getEepForOM1OperationCompleted = AddressOf Me.OngetEepForOM1OperationCompleted
            End If
            Me.InvokeAsync("getEepForOM1", New Object(-1) {}, Me.getEepForOM1OperationCompleted, userState)
        End Sub
        
        Private Sub OngetEepForOM1OperationCompleted(ByVal arg As Object)
            If (Not (Me.getEepForOM1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEepForOM1Completed(Me, New getEepForOM1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getListMovementBYDate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getListMovementBYDate(ByVal StartDate As String, ByVal EndDate As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getListMovementBYDate", New Object() {StartDate, EndDate})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getListMovementBYDateAsync(ByVal StartDate As String, ByVal EndDate As String)
            Me.getListMovementBYDateAsync(StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getListMovementBYDateAsync(ByVal StartDate As String, ByVal EndDate As String, ByVal userState As Object)
            If (Me.getListMovementBYDateOperationCompleted Is Nothing) Then
                Me.getListMovementBYDateOperationCompleted = AddressOf Me.OngetListMovementBYDateOperationCompleted
            End If
            Me.InvokeAsync("getListMovementBYDate", New Object() {StartDate, EndDate}, Me.getListMovementBYDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetListMovementBYDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getListMovementBYDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getListMovementBYDateCompleted(Me, New getListMovementBYDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProvidentFundBYPin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProvidentFundBYPin(ByVal Pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetProvidentFundBYPin", New Object() {Pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProvidentFundBYPinAsync(ByVal Pin As String)
            Me.GetProvidentFundBYPinAsync(Pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProvidentFundBYPinAsync(ByVal Pin As String, ByVal userState As Object)
            If (Me.GetProvidentFundBYPinOperationCompleted Is Nothing) Then
                Me.GetProvidentFundBYPinOperationCompleted = AddressOf Me.OnGetProvidentFundBYPinOperationCompleted
            End If
            Me.InvokeAsync("GetProvidentFundBYPin", New Object() {Pin}, Me.GetProvidentFundBYPinOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProvidentFundBYPinOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProvidentFundBYPinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProvidentFundBYPinCompleted(Me, New GetProvidentFundBYPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileForStaffPackagesBYPIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileForStaffPackagesBYPIN(ByVal Pin As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileForStaffPackagesBYPIN", New Object() {Pin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileForStaffPackagesBYPINAsync(ByVal Pin As String)
            Me.GetEmployeeProfileForStaffPackagesBYPINAsync(Pin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileForStaffPackagesBYPINAsync(ByVal Pin As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileForStaffPackagesBYPINOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileForStaffPackagesBYPINOperationCompleted = AddressOf Me.OnGetEmployeeProfileForStaffPackagesBYPINOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileForStaffPackagesBYPIN", New Object() {Pin}, Me.GetEmployeeProfileForStaffPackagesBYPINOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileForStaffPackagesBYPINOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileForStaffPackagesBYPINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileForStaffPackagesBYPINCompleted(Me, New GetEmployeeProfileForStaffPackagesBYPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeProfileForStaffPackagesBYUserName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeProfileForStaffPackagesBYUserName(ByVal UserName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeeProfileForStaffPackagesBYUserName", New Object() {UserName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileForStaffPackagesBYUserNameAsync(ByVal UserName As String)
            Me.GetEmployeeProfileForStaffPackagesBYUserNameAsync(UserName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeProfileForStaffPackagesBYUserNameAsync(ByVal UserName As String, ByVal userState As Object)
            If (Me.GetEmployeeProfileForStaffPackagesBYUserNameOperationCompleted Is Nothing) Then
                Me.GetEmployeeProfileForStaffPackagesBYUserNameOperationCompleted = AddressOf Me.OnGetEmployeeProfileForStaffPackagesBYUserNameOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeProfileForStaffPackagesBYUserName", New Object() {UserName}, Me.GetEmployeeProfileForStaffPackagesBYUserNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeProfileForStaffPackagesBYUserNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeProfileForStaffPackagesBYUserNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeProfileForStaffPackagesBYUserNameCompleted(Me, New GetEmployeeProfileForStaffPackagesBYUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListALLMovementBYDate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetListALLMovementBYDate(ByVal StartDate As String, ByVal EndDate As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetListALLMovementBYDate", New Object() {StartDate, EndDate})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetListALLMovementBYDateAsync(ByVal StartDate As String, ByVal EndDate As String)
            Me.GetListALLMovementBYDateAsync(StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetListALLMovementBYDateAsync(ByVal StartDate As String, ByVal EndDate As String, ByVal userState As Object)
            If (Me.GetListALLMovementBYDateOperationCompleted Is Nothing) Then
                Me.GetListALLMovementBYDateOperationCompleted = AddressOf Me.OnGetListALLMovementBYDateOperationCompleted
            End If
            Me.InvokeAsync("GetListALLMovementBYDate", New Object() {StartDate, EndDate}, Me.GetListALLMovementBYDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetListALLMovementBYDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetListALLMovementBYDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetListALLMovementBYDateCompleted(Me, New GetListALLMovementBYDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAllEmployeeProfileForITAM", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListAllEmployeeProfileForITAM() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListAllEmployeeProfileForITAM", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListAllEmployeeProfileForITAMAsync()
            Me.ListAllEmployeeProfileForITAMAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListAllEmployeeProfileForITAMAsync(ByVal userState As Object)
            If (Me.ListAllEmployeeProfileForITAMOperationCompleted Is Nothing) Then
                Me.ListAllEmployeeProfileForITAMOperationCompleted = AddressOf Me.OnListAllEmployeeProfileForITAMOperationCompleted
            End If
            Me.InvokeAsync("ListAllEmployeeProfileForITAM", New Object(-1) {}, Me.ListAllEmployeeProfileForITAMOperationCompleted, userState)
        End Sub
        
        Private Sub OnListAllEmployeeProfileForITAMOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListAllEmployeeProfileForITAMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListAllEmployeeProfileForITAMCompleted(Me, New ListAllEmployeeProfileForITAMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfile_SummaryReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfile_SummaryReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfile_SummaryReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub Get_LogK2_ChangeApprover_Input_DataSetCompletedEventHandler(ByVal sender As Object, ByVal e As Get_LogK2_ChangeApprover_Input_DataSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Get_LogK2_ChangeApprover_Input_DataSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllemployeeunderApprover_Input_DataSetCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllemployeeunderApprover_Input_DataSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllemployeeunderApprover_Input_DataSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmployeeProfileByPIN_MultiPositionCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmployeeProfileByPIN_MultiPositionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmployeeProfileByPIN_MultiPositionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub List_EmpProfile_Time_ChangeApprover_Input_DataSetCompletedEventHandler(ByVal sender As Object, ByVal e As List_EmpProfile_Time_ChangeApprover_Input_DataSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class List_EmpProfile_Time_ChangeApprover_Input_DataSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetChangeApproverK2_SummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetChangeApproverK2_SummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetChangeApproverK2_SummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub List_LogK2_ChangeApprover_DetailCompletedEventHandler(ByVal sender As Object, ByVal e As List_LogK2_ChangeApprover_DetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class List_LogK2_ChangeApprover_DetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetOrgInfobyOrgCode_IN_DataSetCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrgInfobyOrgCode_IN_DataSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrgInfobyOrgCode_IN_DataSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmployeeProfileByPIN_Input_DataSetCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmployeeProfileByPIN_Input_DataSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmployeeProfileByPIN_Input_DataSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmployeeProfileByPIN_Input_DataSetByPowerSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub List_Log_OM_TransFormCompletedEventHandler(ByVal sender As Object, ByVal e As List_Log_OM_TransFormCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class List_Log_OM_TransFormCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub listOrganizeCompletedEventHandler(ByVal sender As Object, ByVal e As listOrganizeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class listOrganizeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub listOrganizeLowerCompletedEventHandler(ByVal sender As Object, ByVal e As listOrganizeLowerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class listOrganizeLowerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetCostCenterCompletedEventHandler(ByVal sender As Object, ByVal e As GetCostCenterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCostCenterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListOrganizeLowerByListOrgCompletedEventHandler(ByVal sender As Object, ByVal e As ListOrganizeLowerByListOrgCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListOrganizeLowerByListOrgCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub listOrganizeUpperCompletedEventHandler(ByVal sender As Object, ByVal e As listOrganizeUpperCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class listOrganizeUpperCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub CHECKMANAGERCompletedEventHandler(ByVal sender As Object, ByVal e As CHECKMANAGERCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CHECKMANAGERCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetManagerByOrgCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetManagerByOrgCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetManagerByOrgCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetOrgPersInfoByBossPostIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrgPersInfoByBossPostIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrgPersInfoByBossPostIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetOrgPersInfoByOrgHRMPINCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrgPersInfoByOrgHRMPINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrgPersInfoByOrgHRMPINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetOrgPersInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrgPersInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrgPersInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmployee_By_CompanyCode_Name_PINCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmployee_By_CompanyCode_Name_PINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmployee_By_CompanyCode_Name_PINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetAllOrgInfobyEmpIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllOrgInfobyEmpIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllOrgInfobyEmpIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetOrgInfobyOrgCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrgInfobyOrgCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrgInfobyOrgCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListPinsbyOrgCodeCompletedEventHandler(ByVal sender As Object, ByVal e As ListPinsbyOrgCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListPinsbyOrgCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetStaffCountByPositionIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetStaffCountByPositionIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStaffCountByPositionIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetAllPGCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllPGCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllPGCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetApproverCompletedEventHandler(ByVal sender As Object, ByVal e As GetApproverCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApproverCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetStaffCountbyOrgCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetStaffCountbyOrgCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStaffCountbyOrgCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetOrganizationNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrganizationNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrganizationNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetCompanyByOrgCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetCompanyByOrgCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCompanyByOrgCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeIDByEmailCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeIDByEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeIDByEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetListEmployeePositionAndOrganizationCompletedEventHandler(ByVal sender As Object, ByVal e As GetListEmployeePositionAndOrganizationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetListEmployeePositionAndOrganizationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllPinsUnderOrgCodeCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllPinsUnderOrgCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllPinsUnderOrgCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllPinsUnderOrgCodeByPrefixPinCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllPinsUnderOrgCodeByPrefixPinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllPinsUnderOrgCodeByPrefixPinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllPinsUnderOrgCodeByPrefixEmailCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllPinsUnderOrgCodeByPrefixEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllPinsUnderOrgCodeByPrefixEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllPinsUnderOrgCodeByPrefixThaiNameCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllPinsUnderOrgCodeByPrefixThaiNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllPinsUnderOrgCodeByPrefixThaiNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllPinsUnderOrgCodeByPrefixThaiSurNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetAllPositionCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllPositionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllPositionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub SearchOrgInfoByOrgCodeOrOrgDescCompletedEventHandler(ByVal sender As Object, ByVal e As SearchOrgInfoByOrgCodeOrOrgDescCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchOrgInfoByOrgCodeOrOrgDescCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub SearchOrgInfoCompletedEventHandler(ByVal sender As Object, ByVal e As SearchOrgInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchOrgInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListTemporaryPinByNewPinCompletedEventHandler(ByVal sender As Object, ByVal e As ListTemporaryPinByNewPinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListTemporaryPinByNewPinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetAllCompanyCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllCompanyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllCompanyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetOrganizationCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrganizationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrganizationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmployeeProfileByPINCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmployeeProfileByPINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmployeeProfileByPINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetApproverProfileByPINCompletedEventHandler(ByVal sender As Object, ByVal e As GetApproverProfileByPINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetApproverProfileByPINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixEngNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixEngNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixEngNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixEngLastNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixEngLastNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixEngLastNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixThaiNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixThaiNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixThaiNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixThaiLastNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixThaiLastNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixThaiLastNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixEmailCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixPinCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixPinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixPinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixOrgcodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixOrgcodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixOrgcodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixOrgnameCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixOrgnameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixOrgnameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByPrefixOrgdescCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByPrefixOrgdescCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByPrefixOrgdescCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByEmailCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllApproverCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllApproverCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllApproverCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetListEmployeeUnderApproverCompletedEventHandler(ByVal sender As Object, ByVal e As GetListEmployeeUnderApproverCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetListEmployeeUnderApproverCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetJobKeyCompletedEventHandler(ByVal sender As Object, ByVal e As GetJobKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJobKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub SearchEmpDetailCompletedEventHandler(ByVal sender As Object, ByVal e As SearchEmpDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchEmpDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub Search_EmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As Search_EmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Search_EmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub List_ActingApproverCompletedEventHandler(ByVal sender As Object, ByVal e As List_ActingApproverCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class List_ActingApproverCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListOrganizeByOrganizeLevelCompletedEventHandler(ByVal sender As Object, ByVal e As ListOrganizeByOrganizeLevelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListOrganizeByOrganizeLevelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub SearchEmployeeOrgCompletedEventHandler(ByVal sender As Object, ByVal e As SearchEmployeeOrgCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchEmployeeOrgCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub List_LineApproverPositionAVPUPCompletedEventHandler(ByVal sender As Object, ByVal e As List_LineApproverPositionAVPUPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class List_LineApproverPositionAVPUPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListOrganizeLevelByCompanyCompletedEventHandler(ByVal sender As Object, ByVal e As ListOrganizeLevelByCompanyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListOrganizeLevelByCompanyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileByUsernameCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileByUsernameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileByUsernameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListLineOrganizeByOrganizeCodeCompletedEventHandler(ByVal sender As Object, ByVal e As ListLineOrganizeByOrganizeCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListLineOrganizeByOrganizeCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListOrgDescByPrefixCompletedEventHandler(ByVal sender As Object, ByVal e As ListOrgDescByPrefixCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListOrgDescByPrefixCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListGradeDescByPrefixCompletedEventHandler(ByVal sender As Object, ByVal e As ListGradeDescByPrefixCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListGradeDescByPrefixCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmpForFingerScanCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmpForFingerScanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmpForFingerScanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmpForFingerScanResignedCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmpForFingerScanResignedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmpForFingerScanResignedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListEmpResignedCompletedEventHandler(ByVal sender As Object, ByVal e As ListEmpResignedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListEmpResignedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllPinsUnderOrgCodeReNewCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllPinsUnderOrgCodeReNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllPinsUnderOrgCodeReNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub CheckEmpResignedCompletedEventHandler(ByVal sender As Object, ByVal e As CheckEmpResignedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckEmpResignedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub getAllEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As getAllEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub getEepForOM1CompletedEventHandler(ByVal sender As Object, ByVal e As getEepForOM1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEepForOM1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub getListMovementBYDateCompletedEventHandler(ByVal sender As Object, ByVal e As getListMovementBYDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getListMovementBYDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetProvidentFundBYPinCompletedEventHandler(ByVal sender As Object, ByVal e As GetProvidentFundBYPinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProvidentFundBYPinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileForStaffPackagesBYPINCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileForStaffPackagesBYPINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileForStaffPackagesBYPINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetEmployeeProfileForStaffPackagesBYUserNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeProfileForStaffPackagesBYUserNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeProfileForStaffPackagesBYUserNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub GetListALLMovementBYDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetListALLMovementBYDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetListALLMovementBYDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387")>  _
    Public Delegate Sub ListAllEmployeeProfileForITAMCompletedEventHandler(ByVal sender As Object, ByVal e As ListAllEmployeeProfileForITAMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.6387"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListAllEmployeeProfileForITAMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
